# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# test_model_builder.py
# Created on: 2017-10-03 13:56:10.00000
#   (generated by ArcGIS/ModelBuilder)
# Description:
# ---------------------------------------------------------------------------
print " ~~~~~~~~~~~~~ starting script ~~~~~~~~~~~"
print

# Import arcpy module
import arcpy
import time

print time.time()

arcpy.env.workspace = r"L:\Interns_stuff\Beth\Mackenzie_AdamsCounty\ModelOutputs.gdb"
arcpy.env.overwriteOutput = True

# Local variables:
#inputs
testbuffers = "test12buffersUTM"
AllRoad_Merge = "All_Roads_Adams12_UTM"

# variable for output table to hold results
FinalTable = "L:\Interns_stuff\MackenzieF\SHPs\ModelOut\ModelOutputs.gdb\Test_FinalTable"


# Make Feature Layer
#MakeFeatureLayer_management (in_features, out_layer, {where_clause}, {workspace}, {field_info}
arcpy.MakeFeatureLayer_management(testbuffers,"buf_lyr")

result = arcpy.GetCount_management(testbuffers)
records = int(result.getOutput(0))
print "The loop should run " + str(records) + "times"

id = 1
# Set up loop to run for each feature
while id <= records:
    # Select Layer by Attribute
    arcpy.SelectLayerByAttribute_management ("buf_lyr", "NEW_SELECTION", "OBJECTID_12 = "+str(id))
    print "The id is: " + str(id)
    out_Int = "RoadInt"+str(id)
    out_sum = "Sum_roadlength"+str(id)
    # For each selected feature: 1. intersect with roads 2. Summarize length

    # Process: Intersect
    arcpy.Intersect_analysis(["buf_lyr", AllRoad_Merge], out_Int, "ALL", "", "INPUT")
    print "Ran all the intersects"
    # Process: Summary Statistics
    arcpy.Statistics_analysis(out_Int, out_sum, "Shape_Length SUM;ID FIRST", "Road_Type")


    #For each summary table, grab the values, put into the results table
    #Create Search Cursor for the out_Sum table
    # Set up the placeholders for the sum of the length of each road type
    LocalSum = 0
    MajorSum = 0
    HwySum = 0

    print "Creating the search cursor on the summary table....."
    Sumfields = ["Road_Type", "SUM_Shape_Length", "First_ID"]
    with arcpy.da.SearchCursor(out_sum, Sumfields) as SumCur:
        for row in SumCur:
            if row[0] == "Local":
                LocalSum = row[1]
            if row[0] == "Major":
                MajorSum = row[1]
            if row[0] == "Highway":
             HwySum = row[1]
            Student = row[2]
            print "Sum of local roads for student " + str(Student) + " = " + str(LocalSum)
            print "Sum of major roads = " + str(MajorSum)
            print "Sum of hwys = " + str(HwySum)
            print "Student ID =  " + str(Student)
            print

        # Create Insert Cursor for the FinalTable
        FinalTableFields = ["StudentID", "Sum_Local_Rds", "Sum_Major_Rds", "Sum_Hwys"]
        FinalCur = arcpy.da.InsertCursor(FinalTable, FinalTableFields)

        print "updating the final table......"
        # Use the Insert Cursor to create a new row in FinalTable and set values
        FinalCur.insertRow(row)
        row[0] = Student
        row[1] = LocalSum
        row[2] = MajorSum
        row[3] = HwySum
        FinalCur.updateRow(row)  # This commits the change, like a save


        # Reset values for the next row
        LocalSum = 0
        MajorSum = 0
        HwySum = 0

    id = id+1

print "The loop ran " + str(id-1) + " times"

print "done!"

print time.time()
